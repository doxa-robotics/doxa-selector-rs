import { Palette, ScrollView } from "std-widgets.slint";
import { Route } from "CategoryPicker.slint";

component RouteCard {
    in property <Route> route: { name: "test", description: "testing" };
    in property <int> i;

    callback clicked();

    ta := TouchArea {
        background := Rectangle {
            background: Palette.accent-background.with-alpha(0.5);
            animate background {
                duration: 200ms;
                easing: ease-in-out;
            }
            border-radius: 12px;

            VerticalLayout {
                alignment: center;
                Text {
                    text: route.name;
                    font-size: 24px;
                    horizontal-alignment: center;
                }

                Text {
                    text: route.description;
                    font-size: 12px;
                    horizontal-alignment: center;
                }
            }
        }

        clicked => {
            clicked();
        }
    }

    states [
        hover when ta.has-hover: {
            background.background: Palette.accent-background.with-alpha(0.8);
        }
    ]
}

export component RoutePicker {
    in property <[Route]> routes;

    property <length> scrollable-width: 452px;
    property <length> tile-height: 62px;
    property <length> gap: 8px;

    callback selected(i: int);

    Rectangle {
        background: Palette.alternate-background.with-alpha(0.5);
        border-color: Palette.border;
        border-width: 1px;
        border-radius: 16px;

        ScrollView {
            width: 100%;
            viewport-width: scrollable-width;
            viewport-height: floor(routes.length / 2) * (tile-height + gap) - gap;

            for route[i] in routes: RouteCard {
                route: route;
                i: i;

                x: mod(i, 2) * scrollable-width / 2 + gap;
                y: floor(i / 2) * (tile-height + gap) + gap;
                width: scrollable-width / 2 - gap;
                height: tile-height;

                clicked => {
                    selected(i);
                }
            }
        }
    }
}
